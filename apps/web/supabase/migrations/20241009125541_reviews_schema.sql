create type "public"."reviews_platform_enum" as enum ('trustpilot', 'twitter', 'g2');
create table "public"."reviews" (
  "id" bigint generated by default as identity not null,
  "username" character varying not null,
  "platform" reviews_platform_enum not null,
  "rating" numeric not null,
  "content" text not null,
  "isFeatured" boolean not null,
  "designation" character varying,
  "country" character varying,
  "avatarImage" character varying,
  "title" character varying,
  "videoUrl" character varying,
  "link" character varying not null
);
alter table "public"."reviews" enable row level security;
CREATE UNIQUE INDEX reviews_pkey ON public.reviews USING btree (id);
alter table "public"."reviews"
add constraint "reviews_pkey" PRIMARY KEY using index "reviews_pkey";
grant delete on table "public"."reviews" to "anon";
grant insert on table "public"."reviews" to "anon";
grant references on table "public"."reviews" to "anon";
grant select on table "public"."reviews" to "anon";
grant trigger on table "public"."reviews" to "anon";
grant truncate on table "public"."reviews" to "anon";
grant update on table "public"."reviews" to "anon";
grant delete on table "public"."reviews" to "authenticated";
grant insert on table "public"."reviews" to "authenticated";
grant references on table "public"."reviews" to "authenticated";
grant select on table "public"."reviews" to "authenticated";
grant trigger on table "public"."reviews" to "authenticated";
grant truncate on table "public"."reviews" to "authenticated";
grant update on table "public"."reviews" to "authenticated";
grant delete on table "public"."reviews" to "service_role";
grant insert on table "public"."reviews" to "service_role";
grant references on table "public"."reviews" to "service_role";
grant select on table "public"."reviews" to "service_role";
grant trigger on table "public"."reviews" to "service_role";
grant truncate on table "public"."reviews" to "service_role";
grant update on table "public"."reviews" to "service_role";
create policy "Allow authenticated to add (insert) reviews" on "public"."reviews" as permissive for
insert to authenticated,
  supabase_auth_admin with check (true);
create policy "Allow authenticated to delete reviews" on "public"."reviews" as permissive for delete to authenticated using (true);
create policy "Allow authenticated to read (select) reviews" on "public"."reviews" as permissive for
select to public using (true);
create policy "Allow authenticated to update reviews" on "public"."reviews" as permissive for
update to authenticated using (true);
