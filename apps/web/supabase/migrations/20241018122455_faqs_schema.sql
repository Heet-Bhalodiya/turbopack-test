create table "public"."faq_categories" (
  "id" bigint generated by default as identity not null,
  "title" character varying not null,
  "icon" character varying not null
);
alter table "public"."faq_categories" enable row level security;
create table "public"."faqs" (
  "id" bigint generated by default as identity not null,
  "title" text not null,
  "description" text not null,
  "categoryId" bigint,
  "isFeatured" boolean not null
);
alter table "public"."faqs" enable row level security;
CREATE UNIQUE INDEX faq_pkey ON public.faq_categories USING btree (id);
CREATE UNIQUE INDEX faq_pkey1 ON public.faqs USING btree (id);
alter table "public"."faq_categories"
add constraint "faq_pkey" PRIMARY KEY using index "faq_pkey";
alter table "public"."faqs"
add constraint "faq_pkey1" PRIMARY KEY using index "faq_pkey1";
alter table "public"."faqs"
add constraint "faq_category_id_fkey" FOREIGN KEY ("categoryId") REFERENCES faq_categories(id) ON DELETE
SET NULL not valid;
alter table "public"."faqs" validate constraint "faq_category_id_fkey";
grant delete on table "public"."faq_categories" to "anon";
grant insert on table "public"."faq_categories" to "anon";
grant references on table "public"."faq_categories" to "anon";
grant select on table "public"."faq_categories" to "anon";
grant trigger on table "public"."faq_categories" to "anon";
grant truncate on table "public"."faq_categories" to "anon";
grant update on table "public"."faq_categories" to "anon";
grant delete on table "public"."faq_categories" to "authenticated";
grant insert on table "public"."faq_categories" to "authenticated";
grant references on table "public"."faq_categories" to "authenticated";
grant select on table "public"."faq_categories" to "authenticated";
grant trigger on table "public"."faq_categories" to "authenticated";
grant truncate on table "public"."faq_categories" to "authenticated";
grant update on table "public"."faq_categories" to "authenticated";
grant delete on table "public"."faq_categories" to "service_role";
grant insert on table "public"."faq_categories" to "service_role";
grant references on table "public"."faq_categories" to "service_role";
grant select on table "public"."faq_categories" to "service_role";
grant trigger on table "public"."faq_categories" to "service_role";
grant truncate on table "public"."faq_categories" to "service_role";
grant update on table "public"."faq_categories" to "service_role";
grant delete on table "public"."faqs" to "anon";
grant insert on table "public"."faqs" to "anon";
grant references on table "public"."faqs" to "anon";
grant select on table "public"."faqs" to "anon";
grant trigger on table "public"."faqs" to "anon";
grant truncate on table "public"."faqs" to "anon";
grant update on table "public"."faqs" to "anon";
grant delete on table "public"."faqs" to "authenticated";
grant insert on table "public"."faqs" to "authenticated";
grant references on table "public"."faqs" to "authenticated";
grant select on table "public"."faqs" to "authenticated";
grant trigger on table "public"."faqs" to "authenticated";
grant truncate on table "public"."faqs" to "authenticated";
grant update on table "public"."faqs" to "authenticated";
grant delete on table "public"."faqs" to "service_role";
grant insert on table "public"."faqs" to "service_role";
grant references on table "public"."faqs" to "service_role";
grant select on table "public"."faqs" to "service_role";
grant trigger on table "public"."faqs" to "service_role";
grant truncate on table "public"."faqs" to "service_role";
grant update on table "public"."faqs" to "service_role";
create policy "Allow authenticated to add (insert) faq_categories" on "public"."faq_categories" as permissive for
insert to authenticated,
  supabase_auth_admin with check (true);
create policy "Allow authenticated to delete faq_categories" on "public"."faq_categories" as permissive for delete to public using (true);
create policy "Allow authenticated to read (select) faq_categories" on "public"."faq_categories" as permissive for
select to public using (true);
create policy "Allow authenticated to update faq_categories" on "public"."faq_categories" as permissive for
update to authenticated using (true);
create policy "Allow authenticated to add (insert) faqs" on "public"."faqs" as permissive for
insert to authenticated,
  supabase_auth_admin with check (true);
create policy "Allow authenticated to delete faqs" on "public"."faqs" as permissive for delete to authenticated using (true);
create policy "Allow authenticated to read (select) faqs" on "public"."faqs" as permissive for
select to public using (true);
create policy "Allow authenticated to update faqs" on "public"."faqs" as permissive for
update to authenticated using (true);
